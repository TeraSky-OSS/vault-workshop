########################
# include the magic
########################
. ./configuration/demo-magic.sh
. ./configuration/helper_functions.sh
. ./configuration/env.sh
########################

VAULT_REMOTE="http://172.16.26.220:8200/"
VAULT_REMOTE_TOKEN="hvs.5KmdF2MzrGiaVDJH61tmmq3v"
VAULT_REMOTE_UNSEAL="vzjLEHN8AUHGe/KXm9mAWHg/DZijLoLC4ExRUfu0Yd0="

PATH_YAML_SSH="$YAML_PATH/secret_ssh"
# VAULT_SSH="172.16.85.154"
# VAULT_SSH_USER="k8s"
# VAULT_SSH_PASSWORD="Aa123456"
# VAULT_SSH_TARGET="$VAULT_SSH_USER@$VAULT_SSH"

clear

# Start demo here

caption "SSH Dynamic Secret - Signed SSH certificates"
echo ""


p "------------------ On Remote Vault ------------------" 
export VAULT_ADDR="$VAULT_REMOTE"
vault operator unseal $VAULT_REMOTE_UNSEAL > /dev/null
vault login $VAULT_REMOTE_TOKEN /dev/null

p "Enable SSH secret engine"
pe "vault secrets enable -path=ssh-client-signer ssh"

echo ""

p "Configure Vault with a CA for signing client keys using the /config/ca endpoint. If you do not have an internal CA, Vault can generate a keypair for you."
pe "vault write ssh-client-signer/config/ca generate_signing_key=true"

echo ""

p "Add the public key to all target host's SSH configuration. This process can be manual or automated using a configuration management tool. The public key is accessible via the API and does not require authentication"
pe "vault read -field=public_key ssh-client-signer/config/ca > $PATH_YAML_SSH/trusted-user-ca-keys.pem"

echo ""

p "Adding the public key generated by vault CA to all target host's SSH configuration."
# sshpass -p "$VAULT_SSH_PASSWORD" scp $PATH_YAML_SSH/trusted-user-ca-keys.pem $VAULT_SSH_TARGET:/etc/ssh/trusted-user-ca-keys.pem
# sshpass -p "$VAULT_SSH_PASSWORD" ssh $VAULT_SSH_TARGET << EOF
#   # Append the TrustedUserCAKeys directive to the sshd_config file
#   sudo sed -i '\$a TrustedUserCAKeys /etc/ssh/trusted-user-ca-keys.pem' /etc/ssh/sshd_config

#   # Restart the SSH service to apply changes
#   sudo systemctl restart sshd.service
# EOF

# Append the TrustedUserCAKeys directive to the sshd_config file
sudo mv $PATH_YAML_SSH/trusted-user-ca-keys.pem /etc/ssh/trusted-user-ca-keys.pem
sudo sed -i "$ a TrustedUserCAKeys /etc/ssh/trusted-user-ca-keys.pem" /etc/ssh/sshd_config
sudo systemctl restart sshd.service


echo ""

p "Create a named Vault role for signing client keys."
p "vault write ssh-client-signer/roles/my-role -<<"EOH"
{
  "algorithm_signer": "rsa-sha2-256",
  "allow_user_certificates": true,
  "allowed_users": "*",
  "allowed_extensions": "permit-pty,permit-port-forwarding",
  "default_extensions": {
    "permit-pty": ""
  },
  "key_type": "ca",
  "default_user": "$VAULT_SSH_USER",
  "ttl": "30m0s"
}
EOH"
vault write ssh-client-signer/roles/my-role -<<"EOH"
{
  "algorithm_signer": "rsa-sha2-256",
  "allow_user_certificates": true,
  "allowed_users": "*",
  "allowed_extensions": "permit-pty,permit-port-forwarding",
  "default_extensions": {
    "permit-pty": ""
  },
  "key_type": "ca",
  "default_user": "$VAULT_SSH_USER",
  "ttl": "30m0s"
}
EOH

echo ""

# Run localy
p "------------------ On Local Machine ------------------" 
p "The following steps are performed by the client (user) that wants to authenticate to machines managed by Vault. These commands are usually run from the client's local workstation."
p "Locate or generate the SSH public key. Usually this is ~/.ssh/id_rsa.pub. If you do not have an SSH keypair, generate one:"
pe "ssh-keygen -t rsa -C "user@example.com""

echo ""

p "Ask Vault to sign your public key. This file usually ends in .pub and the contents begin with ssh-rsa ...."
pe "vault write ssh-client-signer/sign/my-role public_key=@$HOME/.ssh/id_rsa.pub"

echo ""

p "now, we will Save the resulting signed, public key to disk. and Limit permissions as needed."
pe "vault write -field=signed_key ssh-client-signer/sign/my-role public_key=@$HOME/.ssh/id_rsa.pub > $HOME/.ssh/id_rsa-cert.pub"

echo ""

p "lets view the enabled extensions, principals, and metadata of the signed key"
pe "ssh-keygen -Lf $HOME/.ssh/id_rsa-cert.pub"

echo ""

p "finally, lets SSH into the host machine using the signed key. we must supply both the signed public key from Vault and the corresponding private key as authentication to the SSH call."
pe "ssh -i ~/.ssh/id_rsa $VAULT_SSH_TARGET"




p ""

# Cleanup
vault secrets disable ssh-client-signer/ > /dev/null
# vault secrets disable userpass > /dev/null
# vault policy delete ssh_test > /dev/null

p "SSH Dynamic Secret - End"
clear